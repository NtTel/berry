// (c) Berry - CSS Utilities, http://maxsite.org/berry


.#{$pf}bg-transparent {
    background-color: transparent !important;
}

.#{$pf}t-transparent {
    color: transparent !important;
}

// opacity
@each $op in $opacity_list {
    $op1: round($op * 100);
    
    .#{$pf}opacity#{$op1},
    .#{$pf}hover-opacity#{$op1}:hover {
        opacity: $op;
    }
    
    .#{$pf}bg-op#{$op1},
    .#{$pf}hover-bg-op#{$op1}:hover {
        background-color: rgba(0, 0, 0, $op);
    }
    
}

// mixin for .t- .bg- .hover-t- .hover-bg 
@mixin colors_state($name, $color) {

    .#{$pf}t-#{$name} {
        color: $color;
    }

    .#{$pf}bg-#{$name} {
        background: $color;
    }

    .#{$pf}hover-t-#{$name}:hover {
        color: $color !important;
    }

    .#{$pf}hover-bg-#{$name}:hover {
        background: $color !important;
    }
}

// base colors .t- .bg- .hover-t- .hover-bg 
@each $name, $color in $color_base_list {
    @include colors_state($name, $color);
}

// generate color gradient 50..900
// colors in $color_step_list
// steps in $color_state_step_list
@mixin colors_step($step, $name, $color) {

    // step: percent%
	$step_list_color: (
         50: 44,
        100: 40,
        150: 35,
        200: 30,
        250: 25,
        300: 20,
        350: 15,
        400: 10,
        450: 5,
        550: 5,
        600: 10,
        650: 15,
        700: 20,
        750: 25,
        800: 30,
        850: 35,
        900: 40,
        950: 43
    );
	
	@if $step==500 {
        @include colors_state(#{$name}#{$step}, $color);
    }
    
    @if $step<490 {
		$proc: map-get($step_list_color, $step);
        @include colors_state(#{$name}#{$step}, lighten($color, $proc));
    }
    
	@if $step>510 {
		$proc: map-get($step_list_color, $step);
        @include colors_state(#{$name}#{$step}, darken($color, $proc));
    }
}

@each $name, $color in $color_step_list {
    @each $step in $color_state_step_list {    
		@include colors_step($step, $name, $color);
    }
}

@mixin colors_state_links_hover($name, $color) {

    .#{$pf}links-hover-t-#{$name} a:not([class^="#{$pf}hover-t-"]):not([class*=" #{$pf}hover-t-"]):hover {
        color: $color !important;
    }

    .#{$pf}links-hover-bg-#{$name} a:not([class^="#{$pf}hover-bg-"]):not([class*=" #{$pf}hover-bg-"]):hover {
        background: $color !important;
    }
}

@each $name, $color in $color_links_hover_list {
    @include colors_state_links_hover($name, $color);
}